.assureit_runners:
    tags:
        - msbuild
        - windows
 
variables:
    Solution: 'Assure-IT.sln'
    Msbuild: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe'
    BranchName: ${CI_COMMIT_BRANCH}
 
.version_script: &version_script |
    Switch -Wildcard ($BranchName) {
    "master" {
    $VersionNumber = "${MajorVersionNumber}.${MinorVersionNumber}.${CI_COMMIT_SHORT_SHA}-master" 
    }
    "dev" {
    $VersionNumber = "${MajorVersionNumber}.${MinorVersionNumber}.${CI_COMMIT_SHORT_SHA}-dev"
    }
    "feature/*" {
    $VersionNumber = ("${MajorVersionNumber}.${MinorVersionNumber}.${CI_COMMIT_SHORT_SHA}-{0}" -f $BranchName.Substring($BranchName.IndexOf("/")).Trim("/") )
    }
    "version/*" {
    $VersionNumber = $BranchName.Substring($BranchName.IndexOf("/")).Trim("/v").Trim("/") + ".${CI_COMMIT_SHORT_SHA}" 
    }
    default {
    $VersionNumber = ("${MajorVersionNumber}.${MinorVersionNumber}.${CI_COMMIT_SHORT_SHA}-{0}") -f $BranchName.Replace("/", "-")
    }
    }
    Write-Host "Version number for the build: ${VersionNumber}"
    Write-Host "Creating VERSION file in the root"
    Out-File -FilePath ".\VERSION" -Encoding ASCII -InputObject $VersionNumber
    Write-Host "Version Number for this build is ${VersionNumber}" 

.build_script: &build_script | 
    & "$Msbuild" "$Solution" /p:Configuration=Release

.rename_dacpac_script: &rename_dacpac_script |
    $FilePattern = ".\Assure-IT\bin\Release\*.dacpac"
 
    $Files = (Get-ChildItem -Path $FilePattern | Where-Object { $_.Name -notin ("master.dacpac", "msdb.dacpac")})
    
    ForEach ($File In $Files) {
    Move-Item -Path $File.FullName -Destination ($File.FullName.Replace(".dacpac", "-v${VersionNumber}.dacpac"))
    }
 
.update_install_script: &update_install_script |
    $PathToPowerShell = ".\PowerShell Deploy\Install Assure-IT.ps1"
    
    $PowerShell = (Get-Content $PathToPowerShell)
    $PowerShell = $PowerShell.Replace("`$dacpacPath = `"`"", "`$dacpacPath = `"..\Assure-IT\DacPac\Assure-IT-v${VersionNumber}.dacpac`"")
    
    $PowerShell | Out-File -FilePath $PathToPowerShell -Encoding utf8
 
.bootstrap_nuget_script: &bootstrap_nuget_script |
    [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bOR [Net.SecurityProtocolType]::Tls12
    Get-PackageProvider -Name NuGet -ForceBootstrap
 
.download_nuget_dependencies_script: &download_nuget_dependencies_script |
    [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bOR [Net.SecurityProtocolType]::Tls12
    cd ".\PowerShell Deploy\nuget"
    & .\nuget.exe install Microsoft.SqlServer.DacFx.x64 -o packages
    cd "${CI_PROJECT_DIR}"
 
.package_script: &package_script |
    New-Item -Name ".\Assure-IT\DacPac" -ItemType Directory
    New-Item -Name ".\PowerShell Deploy\nuget\Dependencies" -ItemType Directory
    Move-Item -Path ".\Assure-IT\bin\Release\*" -Destination ".\Assure-IT\DacPac"
    Move-Item -Path ".\PowerShell Deploy\nuget\packages\Microsoft*" -Destination ".\PowerShell Deploy\Dependencies"
    Remove-Item -Path ".\PowerShell Deploy\Dependencies\*.nupkg"
 
.pester_test_script: &pester_test_script |
    try {
    $result = Invoke-Pester -ExcludeTag "RequiresSql" -OutputFile "pester_xml.xml" -OutputFormat NUnitXml -PassThru -Strict -ErrorAction Stop
    
    if ($result.FailedCount -gt 0) {
    throw "{0} tests did not pass" -f $result.FailedCount
    }
    }
    catch {
    $msg = $_
    Write-Error -ErrorRecord $msg
    exit 1
    }

before_script:
    - Get-Date -Format "dddd MM/dd/yyyy HH:mm K"
    - Write-Host "Started by ${GITLAB_USER_NAME}"
    - Write-Host "Major version number is '${MajorVersionNumber}', Minor version number is '${MinorVersionNumber}' i.e. '${MajorVersionNumber}.${MinorVersionNumber}.X'"
    - Write-Host "Pipeline build ID is '${CI_PIPELINE_ID}'"
    - Write-Host "Commit ref name is '${CI_COMMIT_REF_NAME}', branch name is '${CI_COMMIT_BRANCH}', commit short sha is '${CI_COMMIT_SHORT_SHA}'"

stages:
    - build_other
    - build_dev
    - build_master
    - test

build_other:
    extends:
        - .assureit_runners
    stage: build_other
    except:
        - dev
        - master
    script: 
        - *version_script
        - *build_script
        - *rename_dacpac_script
        - *update_install_script
        - *bootstrap_nuget_script
        - *download_nuget_dependencies_script
        - *package_script
    artifacts: 
        name: "${ArtifactName}.${MajorVersionNumber}.${MinorVersionNumber}.${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_BRANCH}"
        paths: 
            - "Assure-IT/DacPac/*"
            - "PowerShell Deploy/EIT.PowerShell.AssureIT/Private/*"
            - "PowerShell Deploy/EIT.PowerShell.AssureIT/Public/*"
            - "PowerShell Deploy/EIT.PowerShell.AssureIT/EIT.PowerShell.AssureIT.*"
            - "PowerShell Deploy/*.*"
            - "PowerShell Deploy/Dependencies/*"
            - "VERSION"
        expire_in: 1 week 

build_dev:
    extends:
        - .assureit_runners
    stage: build_dev
    only:
        - dev
    script: 
        - *version_script
        - *build_script
        - *rename_dacpac_script
        - *update_install_script
        - *bootstrap_nuget_script
        - *download_nuget_dependencies_script
        - *package_script
    artifacts: 
        name: "${ArtifactName}.${MajorVersionNumber}.${MinorVersionNumber}.${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_BRANCH}"
        paths: 
        - "Assure-IT/DacPac/*"
        - "PowerShell Deploy/EIT.PowerShell.AssureIT/Private/*"
        - "PowerShell Deploy/EIT.PowerShell.AssureIT/Public/*"
        - "PowerShell Deploy/EIT.PowerShell.AssureIT/EIT.PowerShell.AssureIT.*"
        - "PowerShell Deploy/*.*"
        - "PowerShell Deploy/Dependencies/*"
        - "VERSION"
    expire_in: 3 months
 
build_master:
    extends:
        - .assureit_runners
    stage: build_master
    only:
        - master
    script: 
        - *version_script
        - *build_script
        - *rename_dacpac_script
        - *update_install_script
        - *bootstrap_nuget_script
        - *download_nuget_dependencies_script
        - *package_script
    artifacts: 
    name: "${ArtifactName}.${MajorVersionNumber}.${MinorVersionNumber}.${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_BRANCH}"
    paths: 
        - "Assure-IT/DacPac/*"
        - "PowerShell Deploy/EIT.PowerShell.AssureIT/Private/*"
        - "PowerShell Deploy/EIT.PowerShell.AssureIT/Public/*"
        - "PowerShell Deploy/EIT.PowerShell.AssureIT/EIT.PowerShell.AssureIT.*"
        - "PowerShell Deploy/*.*"
        - "PowerShell Deploy/Dependencies/*"
        - "VERSION"
    expire_in: 12 months
    
test:
    extends:
        - .assureit_runners
    stage: test
    dependencies: 
        - build_other
        - build_dev
        - build_master
    script:
        - *pester_test_script